
import path from 'path';
import * as grpc from '@grpc/grpc-js';
import * as protoLoader from '@grpc/proto-loader';
import { updateUserById } from '../helper/user.helper';

const USER_PROTO_PATH = path.join(__dirname, './proto/user.proto');
const userPackageDefinition = protoLoader.loadSync(USER_PROTO_PATH, {
  keepCase: true,
  longs: String,
  enums: String,
  defaults: true,
  oneofs: true,
});
const userProto :any= grpc.loadPackageDefinition(userPackageDefinition).user;



const server = new grpc.Server();
server.addService(userProto.UserService.service, { UpdateUserById:updateUserById });
const PORT = 50051;

server.bindAsync(`0.0.0.0:${PORT}`, grpc.ServerCredentials.createInsecure(), (err, port) => {
    if (err) {
        console.error(err);
        return;
    }
    server.start();
    console.log(`gRPC server running on port ${port}`);
});


export default server