version: "3"
services:
  phpmyadmin:
    container_name: phpmyadmin_container
    image: phpmyadmin/phpmyadmin:5.1.1
    restart: on-failure
    volumes:
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      PMA_HOST: mysql-server
    ports:
      - "8084:80"

  mysql-server:
    image: mysql:8.0.19
    container_name: mysql_container
    restart: on-failure
    command:
      [
        "--default-authentication-plugin=mysql_native_password",
        "--max_connections=10000"
      ]
    environment:
      - MYSQL_ROOT_PASSWORD=admin123
      - MYSQL_USER=root
      - MYSQL_PASSWORD=admin123
    volumes:
      - /data/dockerVolume/mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"

  redis:
    container_name: redis_c
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "/home/ant/Desktop/dockerVolume:/var/lib/redis"

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    hostname: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181

  kafka:
    container_name: kafka
    hostname: kafka
    restart: always
    image: confluentinc/cp-kafka:5.3.0
    ports:
      - '9092:9092'
      - '29093:29093'
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092,EXTERNAL_DIFFERENT_HOST://:29093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092,EXTERNAL_DIFFERENT_HOST://10.1.5.12:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT,EXTERNAL_DIFFERENT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    container_name: kafka-ui
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19092"
    depends_on:
      - kafka

volumes:
  mysql-data:
  docker-redis:
